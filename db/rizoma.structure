 -- Copyright (C) 2008 Rizoma Tecnologia Limitada <info@rizoma.cl>

 -- This file is part of rizoma.

 -- Rizoma is free software; you can redistribute it and/or modify
 -- it under the terms of the GNU General Public License as published by
 -- the Free Software Foundation; either version 2 of the License, or
 -- (at your option) any later version.

 -- This program is distributed in the hope that it will be useful,
 -- but WITHOUT ANY WARRANTY; without even the implied warranty of
 -- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 -- GNU General Public License for more details.

 -- You should have received a copy of the GNU General Public License
 -- along with this program; if not, write to the Free Software
 -- Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA


-- ===============================================================================
--
--   Generated by:      tedia2sql -- v1.2.12
--                      See http://tedia2sql.tigris.org/AUTHORS.html for tedia2sql author information
--
--   Target Database:   postgres
--   Generated at:      Sat Nov 10 12:10:13 2007
--   Input Files:       modelo.dia
--
-- ================================================================================

-- Generated SQL Schema Drop statements
-- --------------------------------------------------------------------
--     Target Database:   postgres
--     SQL Generator:     tedia2sql -- v1.2.12
--     Generated at:      Sat Nov 10 12:10:10 2007
--     Input Files:       modelo.dia
--     42 TABLAS

drop table if exists abono cascade;
drop table if exists asistencia cascade;
drop table if exists bodega cascade;
drop table if exists caja cascade;
drop table if exists canje cascade;
drop table if exists cheques cascade;
drop table if exists cliente cascade;
drop table if exists compra cascade;
drop table if exists compra_detalle cascade;
drop table if exists compra_anulda cascade;
drop table if exists compra_anulada_detalle cascade;
drop table if exists nota_credito cascade;
drop table if exists nota_credito_detalle cascade;
drop table if exists deuda cascade;
--drop table if exists Devolucion cascade;
drop table if exists devolucion cascade;
drop table if exists devolucion_detalle cascade;
drop table if exists documentos_detalle cascade;
drop table if exists documentos_emitidos cascade;
drop table if exists documentos_emitidos_detalle cascade;
drop table if exists egreso cascade;
drop table if exists factura_compra cascade;
drop table if exists factura_compra_detalle cascade;
drop table if exists familias cascade;
drop table if exists formas_pago cascade;
drop table if exists guias_compra cascade;
drop table if exists guias_compra_detalle cascade;
drop table if exists impuesto cascade;
drop table if exists ingreso cascade;
drop table if exists log cascade;
drop table if exists merma cascade;
drop table if exists merma_mc_detalle cascade;
drop table if exists negocio cascade;
drop table if exists numeros_documentos cascade;
drop table if exists pagos cascade;
drop table if exists producto cascade;
drop table if exists producto_recibido cascade;
drop table if exists proveedor cascade;
drop table if exists tarjetas cascade;
drop table if exists tipo_egreso cascade;
drop table if exists tipo_ingreso cascade;
drop table if exists tipo_merma cascade;
drop table if exists traspaso cascade;
drop table if exists traspaso_detalle cascade;
drop table if exists traspaso_mc_detalle cascade;
drop table if exists unidad_producto;
drop table if exists users cascade;
drop table if exists venta cascade;
drop table if exists venta_anulada cascade;
drop table if exists venta_detalle cascade;
drop table if exists color cascade;
drop table if exists sub_depto cascade;
drop table if exists clothes_code cascade;
drop table if exists pago_mixto cascade;
drop table if exists emisor_cheque cascade;
drop table if exists cheque_rest cascade;
drop table if exists tipo_mercaderia cascade;
drop table if exists componente_mc cascade;
drop table if exists venta_mc_detalle cascade;


-- Generated SQL Schema
-- --------------------------------------------------------------------
--     Target Database:   postgres
--     SQL Generator:     tedia2sql -- v1.2.12
--     Generated at:      Sat Nov 10 12:10:10 2007
--     Input Files:       modelo.dia


-- Abono
create table abono (
  id                        serial not null,
  rut_cliente               int4,
  monto_abonado             int4,
  fecha_abono               timestamp,
  constraint pk_abono primary key (id)
) ;

-- Asistencia
create table asistencia (
  id                        serial not null,
  id_user                   int2,
  entrada                   timestamp,
  salida                    timestamp,
  constraint pk_asistencia primary key (id)
) ;

--Bodega
create table bodega
(
  id serial not null,
  nombre		    character varying(50),
  tipo 			    character varying(50),
  estado 		    boolean default 't',
  constraint pk_bodega primary key (id)
);

-- Deuda
create table deuda (
  id                        serial not null,
  id_venta                  int4 not null,
  rut_cliente               int4 not null,
  vendedor                  int4,
  pagada                    bool default false,
  fecha_pagada              timestamp,
  constraint pk_deuda primary key (id)
) ;

-- Documentos_emitidos
create table documentos_emitidos (
  id                        serial not null,
  id_venta		    int4 not null, -- not null se debe quitar para migrar bases antiguas
  tipo_documento            int2,
  forma_pago                int2,
  num_documento             int4,
  fecha_emision             timestamp,
  constraint pk_documentos_emitidos primary key (id)
) ;

-- Documentos_emitidos_detalle
create table documentos_emitidos_detalle (
  id                        serial not null primary key,
  id_documento              int4 not null,
  barcode_product           int8 not null,
  precio                    int4,
  cantidad                  float8
) ;

-- Cheques
create table cheques (
  id                        serial not null,
  id_venta                  int4 not null,
  serie                     varchar(10),
  numero                    int4,
  banco                     varchar(50),
  plaza                     varchar(50),
  monto                     int4,
  fecha                     timestamp,
  constraint pk_cheques primary key (id)
) ;

-- Factura_compra
create table factura_compra (
  id                        serial not null,
  id_compra                 int4 not null,
  rut_proveedor             int4 not null,
  num_factura               int4,
  fecha                     timestamp,
  valor_neto                int4,
  valor_iva                 int4,
  descuento                 int4,
  pagada                    bool,
  monto                     int4, -- monto total de los productos
  costo_neto_transporte     double precision,
  iva_transporte	    double precision,
  fecha_pago                timestamp,
  forma_pago                int4,
  constraint pk_factura_compra primary key (id)
) ;

-- Devolucion
create table devolucion
(
  id 			    serial not null,
  monto		 	    integer not null,
  fecha 		    timestamp without time zone ,
  proveedor	 	    integer not null,
  constraint pk_devolucion primary key (id)
);

-- Devolucion_detalle
create table devolucion_detalle (
  id                        int4 not null,
  id_devolucion             int4 not null,
  barcode                   int8 not null,
  cantidad                  float8 not null,
  precio                    int4 not null,
  precio_compra		    float8 not null,
  constraint pk_devolucion_detalle primary key (id,id_devolucion)
) ;

-- Devolucion
--create table Devolucion (
--  id                        serial not null,
--  barcode_product           int8 not null,
--  cantidad                  float8,
--  cantidad_recibida         float8 default 0.0,
--  devuelto                  bool default false,
--  constraint pk_devolucion primary key (id)
--) ;

-- Egreso
create table egreso (
  id                        serial not null,
  id_caja                   int not null,
  monto                     int4,
  tipo                      int2,
  fecha                     timestamp,
  usuario                   int4,
  constraint pk_egreso primary key (id)
) ;

-- Compra
create table compra (
  id                        serial not null,
  fecha                     timestamp,
  rut_proveedor             int4 not null,
  pedido                    varchar(100),
  forma_pago                int2,
  ingresada                 bool,
  anulada                   bool,
  anulada_pi                boolean default 'f',  --anulada post-ingreso
  constraint pk_compra primary key (id)
) ;

-- Compra Anulada
create table compra_anulada (
  id                        serial not null primary key,
  id_compra		    int4 not null,
  id_factura_compra	    int4 not null,
  fecha_anulacion	    timestamp,
  rut_proveedor             int4 not null,
  maquina              	    int4
);

-- Compra Anulada Detalle
create table compra_anulada_detalle (
  id   	     		    serial not null primary key,
  id_compra_anulada 	    int4 not null,
  barcode 		    int8 not null,
  costo   		    float8,
  precio  		    int4,
  cantidad 		    float8,
  cantidad_anulada 	    float8
);

-- Nota Credito
create table nota_credito (
 id   		    	    serial not null primary key,
 id_factura_compra          int4,
 fecha 		    	    timestamp,
 fecha_factura	    	    timestamp,
 rut_proveedor       	    int4 not null
);

-- Nota Credito Detalle
create table nota_credito_detalle (
 id                         serial not null primary key,
 id_nota_credito     	    int4 not null,
 barcode 	    	    int8 not null,
 costo 		    	    float8,
 precio 		    int4,
 cantidad 	    	    float8
);

-- Cliente
create table cliente (
  rut                       int4 not null,
  dv                        varchar(1) not null,
  nombre                    varchar(60),
  apell_p                   varchar(60),
  apell_m                   varchar(60),
  giro                      varchar(255),
  direccion                 varchar(150),
  comuna		    varchar(25),
  telefono                  varchar(15),
  telefono_movil            varchar(15),
  mail                      varchar(30),
  abonado                   int4,
  credito                   int4,
  credito_enable            bool,
  activo		    bool default 't',
  constraint pk_cliente primary key (rut)
) ;

-- Documentos_detalle
create table documentos_detalle (
  id                        serial not null primary key,
  numero                    int4,
  id_compra                 int4,
  barcode                   int8 not null,
  cantidad                  float8,
  precio                    float8, --precio_compra
  costo_promedio	    float8,
  fecha                     timestamp,
  factura                   bool not null,
  elaboracion               timestamp,
  vencimiento               timestamp,
  iva                       int4,
  otros                     int4
) ;

-- Factura_detalle
create table factura_compra_detalle (
  id                        serial not null,
  id_factura_compra         int4 not null,
  barcode                   int8 not null,
  cantidad                  float8,
  precio                    float8, --precio_compra
  costo_promedio	    float8,
  iva                       int4,
  otros                     int4,
  constraint pk_factura_compra_detalle primary key(id, id_factura_compra),
  constraint fk_factura_compra_detalle_factura foreign key(id_factura_compra) references factura_compra(id)
) ;

-- Caja
create table caja (
  id                        serial not null,
  id_vendedor               int4 not null,
  fecha_inicio              timestamp,
  inicio                    int4,
  id_venta_inicio           int4 not null,
  fecha_termino             timestamp,
  termino                   int4,
  id_venta_termino          int4,
  perdida                   int4,
  constraint pk_caja primary key (id)
) ;

-- Canje
create table canje (
  id                        serial not null,
  fecha                     timestamp,
  barcode                   int8 not null,
  cantidad                  float(8),
  constraint pk_canje primary key (id)
) ;

-- Familias
create table familias (
  id                        serial not null,
  nombre                    varchar(20)
) ;

-- Formas_pago
create table formas_pago (
  id                        serial not null,
  nombre                    varchar(50),
  days                      int2,
  constraint pk_formas_pago primary key (id)
) ;

-- Guias_compra
create table guias_compra (
  id                        serial not null,
  numero                    int4,
  id_compra                 int4 not null,
  id_factura                int4,
  rut_proveedor             int4,
  fecha_emision             timestamp,
  constraint pk_guias_compra primary key (id)
) ;

-- Guias_compra_detalle
create table guias_compra_detalle (
  id                        serial not null,
  id_guias_compra           int4 not null,
  barcode                   int8 not null,
  cantidad                  float8,
  precio                    float8,
  iva                       int4,
  otros                     int4,
  constraint pk_guias_compra_detalle primary key(id, id_guias_compra),
  constraint fk_guias_compra_detalle_guias_compra foreign key(id_guias_compra) references guias_compra(id)
) ;

-- Numeros_documentos
create table numeros_documentos (
  num_boleta                int4,
  num_factura               int4,
  num_guias                 int4
) ;

-- Pagos
create table pagos (
  id_fact                   int4,
  fecha                     timestamp,
  caja                      bool,
  descrip                   text
) ;

-- Negocio
create table negocio (
  razon_social              varchar(200),
  rut                       int4,
  dv                        varchar(1),
  nombre                    varchar(200),
  fono                      varchar(15),
  fax                       varchar(15),
  direccion                 varchar(200),
  comuna                    varchar(50),
  ciudad                    varchar(50),
  giro                      varchar(100),
  at                        varchar(100)
) ;

-- Merma
create table merma (
  id                        serial not null,
  barcode                   int8,
  tipo			    int4, -- tipo de producto
  unidades                  float8,
  motivo                    int2,
  fecha 		    timestamp without time zone,
  constraint pk_merma primary key (id)
) ;

-- Merma_mc_detalle 
create table merma_mc_detalle (
  id                        serial not null,
  id_merma		    int4 not null,
  id_mh                     int4[], -- Un id array para identificar relacion madre-hijo  
  barcode_madre		    bigint,
  barcode_hijo              bigint,
  tipo_madre		    int4,
  tipo_hijo		    int4,
  cantidad                  float8,
  constraint pk_merma_mc_detalle primary key (id)
) ;


-- Ingreso
create table ingreso (
  id                        serial not null,
  id_caja                   int not null,
  monto                     int4,
  tipo                      int2 not null,
  fecha                     timestamp,
  usuario                   int4,
  constraint pk_ingreso primary key (id)
) ;

-- Impuesto
create table impuesto (
  id                        serial not null,
  descripcion               varchar(250),
  monto                     float8,
  removable                 boolean default 't',
  constraint pk_impuesto primary key (id)
) ;

create table unidad_producto
(
  id serial not null,
  descripcion character varying(250),
  constraint pk_unidad_producuto primary key (id)
) ;

-- Producto
create table producto (
  barcode                   serial8 not null,	-- llave primaria
  codigo_corto              varchar(16),	-- crear ckeck point
  marca                     varchar(35),
  descripcion               varchar(50),
  contenido                 varchar(10),
  unidad                    varchar(10),
  stock                     float8 default 0,
  precio                    int4,
  costo_promedio            float8,	-- antes fifo
  vendidos                  float8,
  impuestos                 bool,
  otros                     int4,
  familia                   int2 default 1,
  perecibles                bool,
  dias_stock                float8 default 1,
  margen_promedio           float8 default 0,
  fraccion                  bool default false,
  canje                     bool default false,
  stock_pro                 float8 default 0.0,
  tasa_canje                float8 default 1.0,
  precio_mayor              int4,
  cantidad_mayor            int4,
  mayorista                 bool default false,
  estado                    bool default true,
  tipo			    int4 default 1, -- 1 = mercadería discreta
  CONSTRAINT pk_producto primary key (barcode),
  CONSTRAINT unique_short_code UNIQUE (codigo_corto)
) ;


-- Componente_mercaderia_compuesta
create table componente_mc (
  id   	     		    serial not null,
  barcode_madre             bigint not null,
  tipo_madre		    int4,
  barcode_comp_der          bigint not null,
  tipo_comp_der		    int4,
  cant_mud                  float8, -- Cantidad de madre que usa el derivado	
  CONSTRAINT pk_componente_mc primary key (id)
) ;


-- Tipo_mercaderia
create table tipo_mercaderia (
  id                        serial not null,
  nombre		    varchar(20),
  CONSTRAINT pk_tipo_mercaderia primary key (id)
);


-- Color
create table color (
  id                        serial not null,
  codigo		    varchar(2),
  nombre		    varchar(20),
  CONSTRAINT pk_color primary key (id)
);

-- Sub_Depto
create table sub_depto (
  id                        serial not null,
  codigo		    varchar(3),
  nombre		    varchar(30),
  CONSTRAINT pk_sub_depto primary key (id)
);

-- Talla
create table talla (
  id                        serial not null,
  codigo		    varchar(2),
  nombre		    varchar(30)
);

-- Clothes_Code
create table clothes_code (
  id                        serial not null,
  codigo_corto              varchar(16),
  depto              	    varchar(2),
  temp              	    varchar(3),
  ano              	    varchar(2),
  sub_depto                 varchar(3),
  id_ropa              	    varchar(2),
  talla			    varchar(2),
  color			    varchar(2),
  CONSTRAINT pk_clothes_code primary key (id)
);


-- Producto_recibido
create table producto_recibido (
  id_dcto                   int4,
  factura                   bool,
  id_compra                 int4,
  barcode                   int8 not null,
  cant_ingresada            int4
) ;

-- Compra_detalle
-- antes products_buy_history
create table compra_detalle (
  id                        serial not null,
  id_compra                 int4 not null,
  cantidad                  float8,
  precio                    float8 not null,
  precio_venta              int4 not null,
  cantidad_ingresada        float8,
  descuento                 int2,
  barcode_product           int8 not null,
  margen                    int4,
  iva                       int4,
  otros_impuestos           int4,
  anulado                   bool default false,
  canjeado                  float8 default 0.0,
  constraint pk_compra_detalle primary key (id,id_compra)
) ;

-- Venta_detalle
-- antes era products_sell_history
create table venta_detalle (
  id                        int4 not null,
  id_venta                  int4 not null,
  barcode                   int8 not null,
  cantidad                  float8,
  precio                    float8 not null, -- Cuando hay descuentos se obtiene un precio proporcional
  fifo                      float8 not null,
  ganancia                  float8 not null,
  iva                       float8,
  otros                     float8,
  iva_residual              float8,
  otros_residual            float8,
  tipo			    int4,
  impuestos		    bool,
  proporcion_iva	    float8,
  proporcion_otros	    float8,
  constraint pk_venta_detalle primary key (id,id_venta)
) ;

-- Venta_mercaderia_compuesta_detalle
create table venta_mc_detalle (
  id                        serial not null,  
  id_venta_detalle          int4 not null, -- FK id (venta_detalle)
  id_venta_vd          	    int4 not null, -- FK id_venta (venta_detalle)
  id_mh	    	    	    int4[],        -- Un id array para identificar relacion madre-hijo
  barcode_madre             int8 not null,
  barcode_hijo              int8 not null,
  cantidad                  float8 not null,
  precio_proporcional	    float8 not null,
  precio                    int4 not null,
  costo_promedio            float8 not null,
  ganancia                  float8 not null,
  iva                       float8 not null,
  otros                     float8 not null,
  iva_residual              float8 not null,
  otros_residual            float8 not null,
  tipo_madre		    int4,
  tipo_hijo		    int4,
  proporcion_iva	    float8,
  proporcion_otros	    float8,
  constraint pk_venta_mc_detalle primary key (id)
) ;


-- Proveedor
create table proveedor (
  rut                       int4 not null,
  dv                        varchar(1) not null,
  nombre                    varchar(100),
  direccion                 varchar(100),
  ciudad                    varchar(100),
  comuna                    varchar(100),
  telefono                  int4,
  email                     varchar(300),
  web                       varchar(300),
  contacto                  varchar(100),
  giro                      varchar(100),
  lapso_reposicion          int4 default 3,
  constraint pk_proveedor primary key (rut)
) ;

-- Tarjetas
create table tarjetas (
  id                        serial not null,
  id_venta                  int4,
  insti                     varchar(50),
  numero                    varchar(20),
  fecha_venc                varchar(7),
  constraint pk_tarjetas primary key (id)
) ;

-- Tipo_egreso
create table tipo_egreso (
  id                        serial not null,
  descrip                   varchar(20),
  removable                 boolean default 't',
  constraint pk_tipo_egreso primary key (id)
) ;

-- Tipo_ingreso
create table tipo_ingreso (
  id                        serial not null,
  descrip                   varchar(20),
  constraint pk_tipo_ingreso primary key (id)
) ;

-- Tipo_merma
create table tipo_merma (
  id                        serial not null,
  nombre                    varchar(25),
  constraint pk_tipo_merma primary key (id)
) ;

-- Traspasos
create table traspaso (
  id                        serial not null,
  monto                     float8,
  fecha                     timestamp,
  origen                    int4,
  destino	            int4,
  vendedor                  int4,
  constraint pk_traspaso primary key (id)
) ;

-- Traspaso_detalle
create table traspaso_detalle (
  id                        int4 not null,
  id_traspaso               int4 not null,
  barcode                   int8 not null,
  cantidad                  float8,
  precio                    float8 not null, --precio costo
  precio_venta		    int4,
  tipo			    int4,
  costo_modificado	    boolean, -- Indica si se le dió un costo para poder realizar el traspaso
  constraint pk_traspaso_detalle primary key (id,id_traspaso)
) ;

-- Traspaso_mc_detalle
create table traspaso_mc_detalle (
  id                        serial not null,
  id_traspaso               int4 not null,
  id_traspaso_detalle       int4 not null,
  id_mh	    	    	    int4[],
  barcode_madre             int8 not null,
  barcode_hijo              int8 not null,
  tipo_madre		    int4 not null,
  tipo_hijo		    int4 not null,
  cantidad                  float8 not null,
  costo_promedio            float8 not null,
  CONSTRAINT pk_traspaso_mc_detalle primary key (id)
) ;

-- Users
create table users (
  id                        serial not null,
  rut                       int4 not null,
  dv                        varchar(1) not null,
  usuario                   varchar(30) not null,
  passwd                    varchar(400) not null,
  nombre                    varchar(75) not null,
  apell_p                   varchar(75) not null,
  apell_m                   varchar(75),
  fecha_ingreso             timestamp,
  level                     int2,
  constraint pk_users primary key (id)
) ;

-- Venta
create table venta (
  id                        serial not null,
  monto                     int4,
  fecha                     timestamp,
  maquina                   int4,
  vendedor                  int4,
  tipo_documento            int2,
  tipo_venta                int2,
  descuento                 int2,
  id_documento              int4,
  canceled                  bool default false,
  constraint pk_venta primary key (id)
) ;

-- Pago_mixto
create table pago_mixto (
  id                   	    serial not null primary key,         	     
  id_sale                   int4 not null,
  tipo_pago1		    int2,
  tipo_pago2		    int2,
  rut1 			    int4,
  rut2                      int4,
  dv1                       varchar(1),
  dv2                       varchar(1),
  aff_imp1		    bool,
  aff_imp2		    bool,
  monto1                    int4,
  monto2                    int4
) ;

-- Emisor_cheque
create table emisor_cheque (
  id                   	    serial not null primary key,
  rut			    int4,
  dv                        varchar(1),
  razon_social		    varchar (50),
  telefono		    varchar(15),
  direccion		    varchar(35),
  comuna		    varchar(15),
  ciudad		    varchar(15),
  giro			    varchar(30),
  activo		    bool default 't'
) ;

-- Cheques_rest
create table cheque_rest (
  id                   	    serial not null primary key,
  id_emisor		    int4 not null,
  id_venta		    int4 not null,
  codigo		    varchar (30),
  monto			    int4,
  fecha_vencimiento         timestamp,
  facturado		    bool default 'f',
  pagado		    bool default 'f'
) ;

-- Venta_anulada
create table venta_anulada (
  id_sale                   int not null,
  fecha                     timestamp default now(),
  vendedor                  int not null,
  constraint pk_venta_anulada primary key (id_sale)
) ;

-- Log
create table log (
  id                   serial not null,
  fecha                timestamp,
  maquina              int4,
  seller               int4,
  text                 text,
  constraint pk_log primary key (id)
) ;

comment on column producto.barcode is 'llave primaria';
comment on column producto.codigo_corto is 'crear ckeck point';
comment on column producto.costo_promedio is 'antes fifo';

comment on table compra_detalle is 'antes products_buy_history';

comment on table venta_detalle is 'antes era products_sell_history';

-- Generated SQL Constraints
-- --------------------------------------------------------------------
--     Target Database:   postgres
--     SQL Generator:     tedia2sql -- v1.2.12
--     Generated at:      Sat Nov 10 12:10:10 2007
--     Input Files:       modelo.dia

alter table venta_detalle add constraint fk_productos_barcode
  foreign key (barcode)
  references producto (barcode)  ;
alter table venta_detalle add constraint fk_venta_id
  foreign key (id_venta)
  references venta (id)  ;
alter table venta_detalle add constraint fk_venta_detalle_tipo
  foreign key (tipo)
  references tipo_mercaderia (id)  ;
alter table venta_mc_detalle add constraint fk_venta_mc_detalle_venta_detalle
  foreign key (id_venta_detalle, id_venta_vd)
  references venta_detalle (id, id_venta)  ;
alter table venta_mc_detalle add constraint fk_venta_mc_detalle_tipo_madre
  foreign key (tipo_madre)
  references tipo_mercaderia (id)  ;
alter table venta_mc_detalle add constraint fk_venta_mc_detalle_tipo_hijo
  foreign key (tipo_hijo)
  references tipo_mercaderia (id)  ;
alter table producto_recibido add constraint fk_productos_recibidos_productos
  foreign key (barcode)
  references producto (barcode)  ;
alter table producto_recibido add constraint fk_compras_productos_recibidos
  foreign key (id_compra)
  references Compra (id)  ;
alter table Compra add constraint fk_proveedor_compra
  foreign key (rut_proveedor)
  references proveedor (rut)  ;
alter table Cheques add constraint fk_venta_cheque
  foreign key (id_venta)
  references venta (id)  ;
alter table compra_detalle add constraint fk_producto_detalle_compra
  foreign key (barcode_product)
  references producto (barcode)  ;
alter table Asistencia add constraint fk_asistencia_users
  foreign key (id_user)
  references users (id)  ;
alter table merma add constraint fk_merma_producto
  foreign key (barcode)
  references producto (barcode)  ;
alter table merma add constraint fk_merma_tipo_merma
  foreign key (motivo)
  references tipo_merma (id)  ;
alter table Abono add constraint fk_abono_cliente
  foreign key (rut_cliente)
  references Cliente (rut)  ;
alter table Tarjetas add constraint fk_tarjeta_venta
  foreign key (id_venta)
  references venta (id)  ;
alter table Canje add constraint fk_canje_producto
  foreign key (barcode)
  references producto (barcode)  ;
alter table deuda add constraint fk_deuda_venta
  foreign key (id_venta)
  references venta (id)  ;
alter table deuda add constraint fk_deuda_cliente
  foreign key (rut_cliente)
  references Cliente (rut)  ;
alter table deuda add constraint fk_deuda_user
  foreign key (vendedor)
  references users (id)  ;
--alter table Devolucion add constraint fk_devolucion_producto
--  foreign key (barcode_product)
--  references producto (barcode)  ;
alter table devolucion add constraint fk_proveedor_rut
  foreign key (proveedor)
  references proveedor (rut)  ;
alter table devolucion_detalle add constraint fk_productos_barcode
  foreign key (barcode)
  references producto (barcode)  ;
alter table devolucion_detalle add constraint fk_devolucion_id
  foreign key (id_devolucion)
  references devolucion (id) ;
alter table ingreso add constraint fk_ingreso_tipo_ingreso
  foreign key (tipo)
  references tipo_ingreso (id)  ;
alter table ingreso add constraint fk_ingreso_users
  foreign key (usuario)
  references users (id)  ;
alter table egreso add constraint fk_egreso_tipo_egreso
  foreign key (tipo)
  references tipo_egreso (id)  ;
alter table egreso add constraint fk_egreso_users
  foreign key (usuario)
  references users (id)  ;
alter table factura_compra add constraint fk_factura_compra_compra
  foreign key (id_compra)
  references Compra (id)  ;
alter table factura_compra add constraint fk_factura_compra_proveedor
  foreign key (rut_proveedor)
  references proveedor (rut)  ;
alter table guias_compra add constraint fk_guia_compra_proveedor
  foreign key (rut_proveedor)
  references proveedor (rut)  ;
alter table guias_compra add constraint fk_guia_compra_factura
  foreign key (id_factura)
  references factura_compra (id)  ;
alter table guias_compra add constraint fk_guia_compra_compra
  foreign key (id_compra)
  references Compra (id)  ;
alter table pagos add constraint fk_pagos_factura_compra
  foreign key (id_fact)
  references factura_compra (id)  ;
alter table documentos_emitidos_detalle add constraint fk_documento_emitido_documento_emitido_detalle
  foreign key (id_documento)
  references documentos_emitidos (id)  ;
alter table documentos_emitidos_detalle add constraint fk_documento_emitido_detalle_producto
  foreign key (barcode_product)
  references producto (barcode)  ;
alter table documentos_detalle add constraint fk_documento_detalle_compra
  foreign key (id_compra)
  references Compra (id)  ;
alter table Compra add constraint fk_compras_forma_pago
  foreign key (forma_pago)
  references formas_pago (id)  ;
alter table Caja add constraint fk_caja_users
  foreign key (id_vendedor)
  references users (id)  ;
alter table compra_detalle add constraint fk_detallecompra_compra
  foreign key (id_compra)
  references Compra (id)  ;
alter table guias_compra add constraint fk_guias_compra_compra
  foreign key (id_compra)
  references Compra (id) ;
alter table compra_anulada_detalle add constraint fk_compra_anulada_detalle_compra_anulada
  foreign key (id_compra_anulada)
  references compra_anulada (id)  ;
alter table nota_credito_detalle add constraint fk_nota_credito_detalle_nota_credito
  foreign key (id_nota_credito)
  references nota_credito (id)  ;
alter table egreso add constraint fk_egreso_caja
  foreign key (id_caja)
  references caja(id);
alter table ingreso add constraint fk_ingreso_caja
  foreign key (id_caja)
  references caja(id);
alter table venta_anulada add constraint fk_venta_anulada_users
  foreign key (vendedor)
  references users(id);
alter table venta_anulada add constraint fk_venta_anulada_venta
  foreign key (id_sale)
  references venta(id);
alter table traspaso_detalle add constraint fk_productos_barcode
  foreign key (barcode)
  references producto (barcode)  ;
alter table traspaso_detalle add constraint fk_traspaso_id
  foreign key (id_traspaso)
  references traspaso (id) ;
alter table pago_mixto add constraint fk_pago_mixto_venta
  foreign key (id_sale)
  references venta (id) ;
alter table cheque_rest add constraint fk_cheque_rest_emisor_cheque
  foreign key (id_emisor)
  references emisor_cheque (id) ;
alter table cheque_rest add constraint fk_cheque_rest_venta
  foreign key (id_venta)
  references venta (id) ;
alter table producto add constraint fk_producto_tipo_mercaderia
  foreign key (tipo)
  references tipo_mercaderia (id) ;
alter table componente_mc add constraint fk_componente_mc_madre_tipo_mercaderia
  foreign key (tipo_madre)
  references tipo_mercaderia (id) ;
alter table componente_mc add constraint fk_componente_mc_derivado_tipo_mercaderia
  foreign key (tipo_comp_der)
  references tipo_mercaderia (id) ;



-- Indices

CREATE INDEX indx_venta_detalle_barcode ON venta_detalle ( barcode );
CREATE INDEX indx_venta_fecha ON venta USING btree (fecha);

-- Alter sequence barcode
ALTER SEQUENCE producto_barcode_seq RESTART WITH 1000000;

